#!/bin/bash

# Print size of the given directory
# Ex: dirsize app/ => 25M
function dirsize {
  du -skh $1
}

# Open Dropbox in a finder window
# Exit the terminal unless run with -k
function db {
  open ~/Dropbox
  if [ $1 != '-k' ]; then
    exit
  fi
}

# Extract compressed files
# Ex: extract downloaded_package.tar.gz
function extract {
  if [ -f $1 ]; then
    case $1 in
      *.tar.bz2) tar xvjf $1   ;;
      *.tar.gz)  tar xvzf $1   ;;
      *.bz2)     bunzip2 $1    ;;
      *.rar)     unrar x $1    ;;
      *.gz)      gunzip $1     ;;
      *.tar)     tar xvf $1    ;;
      *.tbz2)    tar xvjf $1   ;;
      *.tgz)     tar xvzf $1   ;;
      *.zip)     unzip $1      ;;
      *.Z)       uncompress $1 ;;
      *.7z)      7z x $1       ;;
      *)         echo "Don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

# Open a url in a web browser, because sometimes opening a browser is too much work
# Ex: web github.com/rails/rails
function web {
  if [ -n $1 ]; then
    open "http://www.$1"
  else
    open 'http://www.google.com'
  fi
}

function type_exists() {
  if [ $(type -P $1) ]; then
    return 0
  fi
  return 1
}

function which_os() {
  if [[ $OSTYPE == $1* ]]; then
    return 0
  fi
  return 1
}

function p_header {
  printf "\n${BOLD}${TP_PURPLE}==========  %s  ==========${RESET}\n" "$@"
}

function p_arrow {
  printf "➜ $@\n"
}

function p_success {
  printf "${TP_GREEN}✔ %s${RESET}\n" "$@"
}

function p_error {
  printf "${TP_RED}✖ %s${RESET}\n" "$@"
}

function p_warning {
  printf "${TP_TAN}➜ %s${RESET}\n" "$@"
}

function p_underline {
  printf "${UNDERLINE}${BOLD}%s${RESET}\n" "$@"
}

function p_bold {
  printf "${BOLD}%s${RESET}\n" "$@"
}

function p_note {
  printf "${UNDERLINE}${BOLD}${TP_BLUE}Note:${RESET} ${TP_BLUE}%s${RESET}\n" "$@"
}
